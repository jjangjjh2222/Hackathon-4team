{"id":"index.html","dependencies":[{"name":"./src\\index.js","dynamic":true,"resolved":"C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\index.js","parent":"C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\index.html"},{"name":"C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\.babelrc","includedInParent":true,"mtime":1660840145411},{"name":"C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\package.json","includedInParent":true,"mtime":1660840638382}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Document</title>\r\n</head>\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script src=\"/1fdf421c05c1140f6d71444ea2b27638.js\">// const roomName = JSON.parse(document.getElementById('room-name').textContent);\n// const ttl = document.getElementById('title');\n// ttl.innerHTML=roomName;\n// const chatSocket = new WebSocket(\n//     'ws://'\n//     + window.location.host\n//     + '/ws/chat/'\n//     + roomName\n//     + '/'\n// );\n// chatSocket.onmessage = function(e) {\n//     const data = JSON.parse(e.data);\n//     const sent = document.getElementsByClassName('sent');\n//     const received = document.getElementsByClassName('received');\n//     const chatList = document.querySelector(\".chatting-list\");\n//     const li = document.createElement(\"li\");\n//     // TODO 유저의 닉네임 데이터를 받아와 본인의 메세지면(this.name===\"sent\") li.classList.add(\"received\")으로 오른쪽에 뜨도록 구현\n//     // li.classList.add(nickname.value === this.name ? \"sent\" : \"received\");\n//     li.classList.add(\"received\");\n//     console.log(data)\n//     const dom = \n//         `<div class=\"user\">${nickname.value}</div>\n//         <p class=\"message\">${data.message}</p>`;\n//     li.innerHTML = dom;\n//     chatList.appendChild(li);\n//     // 스크롤 자동 하단으로 이동\n//     document.getElementById(\"chat-log\").scrollTop = document.getElementById(\"chat-log\").scrollHeight;\n// };\n// chatSocket.onclose = function(e) {\n//     console.error('Chat socket closed unexpectedly');\n// };\n// document.querySelector('#chat-message-input').focus();\n// document.querySelector('#chat-message-input').onkeypress = function(e) {\n//     if (e.keyCode === 13) {  // enter, return\n//         // document.querySelector('#chat-message-submit').click();\n//         const messageInputDom = document.querySelector('#chat-message-input');\n//         const message = messageInputDom.value;\n//         chatSocket.send(JSON.stringify({\n//             'message': message\n//         }));\n//         messageInputDom.value = '';\n//         // 스크롤 자동 하단으로 이동\n//         document.getElementById(\"chat-log\").scrollTop = document.getElementById(\"chat-log\").scrollHeight;\n//     }\n// };\n// document.querySelector('#chat-message-submit').onclick = function(e) {\n//     const messageInputDom = document.querySelector('#chat-message-input');\n//     const message = messageInputDom.value;\n//     chatSocket.send(JSON.stringify({\n//         'message': message\n//     }));\n//     messageInputDom.value = '';\n//     // 스크롤 자동 하단으로 이동\n//     document.getElementById(\"chat-log\").scrollTop = document.getElementById(\"chat-log\").scrollHeight;\n// };</script>\r\n</body>\r\n</html>"},"sourceMaps":null,"error":null,"hash":"ced4e6f51dfbbcc5bc72b01fc647302f","cacheData":{"env":{}}}