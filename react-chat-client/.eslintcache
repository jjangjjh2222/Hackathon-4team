[{"C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\pages\\List.jsx":"4","C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\pages\\Main.jsx":"5","C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\pages\\Search.jsx":"6","C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\pages\\Chat\\Chat.jsx":"7","C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\pages\\Home\\Home.jsx":"8","C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\components\\Modal2.js":"9","C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\components\\Modal.js":"10","C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\pages\\Chat\\Loading.jsx":"11","C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\components\\ChatInput\\ChatInput.jsx":"12","C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\components\\ChatLog\\ChatLog.jsx":"13"},{"size":408,"mtime":1660839810816,"results":"14","hashOfConfig":"15"},{"size":1752,"mtime":1660839809971,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1660839811099,"results":"17","hashOfConfig":"15"},{"size":8817,"mtime":1660839811004,"results":"18","hashOfConfig":"15"},{"size":4049,"mtime":1660903350643,"results":"19","hashOfConfig":"15"},{"size":5388,"mtime":1660839811043,"results":"20","hashOfConfig":"15"},{"size":1163,"mtime":1660909103105,"results":"21","hashOfConfig":"15"},{"size":932,"mtime":1660839810985,"results":"22","hashOfConfig":"15"},{"size":4954,"mtime":1660903949538,"results":"23","hashOfConfig":"15"},{"size":4231,"mtime":1660839810151,"results":"24","hashOfConfig":"15"},{"size":135,"mtime":1660839810923,"results":"25","hashOfConfig":"15"},{"size":1981,"mtime":1660903985041,"results":"26","hashOfConfig":"15"},{"size":2509,"mtime":1660839810135,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"oavmar",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"31"},"C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\index.js",["61"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n",["62","63"],"C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\App.js",["64","65","66"],"import { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport Main from \"./pages/Main.jsx\";\nimport List from \"./pages/List.jsx\";\nimport Search from \"./pages/Search.jsx\";\nimport Chat from \"./pages/Chat/Chat\";\nimport Home from \"./pages/Home/Home\";\nimport styled from 'styled-components';\nimport './App.css';\n\nfunction App() {\n  // const [nickname, setNickname] = useState('');\n  // const [roomName, setRoomName] = useState('');\n\n  return (\n    <div className=\"App\">\n      <GlobalStyles />\n      <Router>\n        <Switch>\n          <Route\n              path=\"/\"\n              exact\n              render={() => <Main />}\n            ></Route>\n          {/* <Route path=\"/join\" exact>\n            <Home\n              nickname={nickname}\n              roomName={roomName}\n              setNickname={setNickname}\n              setRoomName={setRoomName}\n            />\n          </Route> */}\n          <Route\n            path=\"/chat\"\n            render={() => <Chat \n              // nickname={nickname} \n              // roomName={roomName} \n              />}\n          ></Route>\n          <Route\n            path=\"/list\"\n            exact\n            render={() => <List \n              // nickname={nickname} \n              // roomName={roomName} \n              />}\n          ></Route>\n          <Route\n            path=\"/search\"\n            exact\n            render={() => <Search />}\n          ></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst GlobalStyles = createGlobalStyle`\n    ${reset}\n    body {\n        text-align: center;\n        background-color: #2c3333;\n    }\n`;","C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\pages\\List.jsx",["67","68","69","70"],"import React, {useEffect, useState} from 'react';\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { GiTheater } from \"react-icons/gi\";\nimport { ImHome, ImSearch } from \"react-icons/im\";\nimport Modal from \"../components/Modal2\";\nimport axios from 'axios';\n\n\n\nconst List = () => {\n\n    axios    \n    .get('https://www.omdbapi.com/?apikey=7035c60c&s=minions')   \n    .then(res => { \n        const h1El = document.getElementsByName('title1-1');\n        h1El[0].textContent = res.data.Search[0].Title;\n        const imgEl = document.getElementById('img1');\n        imgEl.src = res.data.Search[0].Poster;\n\n    })\n    axios    \n    .get('https://www.omdbapi.com/?apikey=7035c60c&s=hansan')   \n    .then(res => { \n        const h1El = document.getElementsByName('title1-2');\n        h1El[0].textContent = res.data.Search[0].Title;\n        const imgEl = document.getElementById('img2');\n        imgEl.src = res.data.Search[0].Poster;\n    })\n    axios    \n    .get('https://www.omdbapi.com/?apikey=7035c60c&s=top')   \n    .then(res => { \n        const h1El = document.getElementsByName('title1-3');\n        h1El[0].textContent = res.data.Search[1].Title;\n        const imgEl = document.getElementById('img3');\n        imgEl.src = res.data.Search[1].Poster;\n    })\n\n    axios    \n    .get('https://www.omdbapi.com/?apikey=7035c60c&s=potter')   \n    .then(res => { \n        const h1El = document.getElementsByName('title2')\n        for (let i=0;i<3;i++){\n            h1El[i].textContent = res.data.Search[i].Title;\n        }\n        const imgEl4 = document.getElementById('img4')\n        imgEl4.src = res.data.Search[0].Poster\n        const imgEl5 = document.getElementById('img5')\n        imgEl5.src = res.data.Search[1].Poster\n        const imgEl6 = document.getElementById('img6')\n        imgEl6.src = res.data.Search[2].Poster\n    })\n\n    axios    \n    .get('https://www.omdbapi.com/?apikey=7035c60c&s=hunger') \n    .then(res => { \n        const h1El = document.getElementsByName('title3')\n        for (let i=0;i<3;i++){\n            h1El[i].textContent = res.data.Search[i].Title;\n        }\n        const imgEl7 = document.getElementById('img7')\n        imgEl7.src = res.data.Search[0].Poster\n        const imgEl8 = document.getElementById('img8')\n        imgEl8.src = res.data.Search[1].Poster\n        const imgEl9 = document.getElementById('img9')\n        imgEl9.src = res.data.Search[2].Poster\n    })\n\n    const refreshPage = () => {\n        window.scrollTo(0, 0);\n        window.location.reload();\n    }\n\n    const [modalOpen, setModalOpen] = useState(false)\n    const modalClose = () => {\n        setModalOpen(!modalOpen)\n    }\n    const [roomData, setRoomData] = useState([])\n\n    const nickname = sessionStorage.getItem('nickname');\n\n    const hasRoom = (e) => {\n        fetch('http://127.0.0.1:8000/movie/')\n        .then(response => response.json())\n        .then((response) => {\n            const name = e.target.textContent;\n            const pic = e.target.src;\n\n            for (var i=0 ; i<response.length ; i++) {\n                if (response[i].title == name || response[i].image == pic) { // 클릭한 영화 관람방이 존재한다면\n                    // TODO 해당 영화 채팅방으로 이동\n                    console.log('해당 방 존재');\n                    \n                }\n            }\n            alert('아직 관람방이 없어요. 직접 만들어보세요!'); \n            modalClose();\n        })\n    }\n\n    return (\n        <div>\n            { modalOpen && <Modal modalClose={modalClose} memo={roomData}></Modal>}\n            <MainText>HACKFLIX</MainText>\n            <Top>\n                <Section>\n                    <H3>{nickname}님께, 오늘의 추천작품</H3>\n                        <Ul>\n                        <Li onClick={hasRoom}>\n                            <Piece>\n                                <Img id='img1'/>\n                                <H4 name='title1-1'></H4>\n                            </Piece>\n                        </Li>\n                        <Li onClick={hasRoom}>\n                            <Piece>\n                                <Img id='img2'/>\n                                <H4 name='title1-2'></H4>\n                            </Piece>\n                        </Li>\n                        <Li onClick={hasRoom}>\n                            <Piece>\n                                <Img id='img3'/>\n                                <H4 name='title1-3'></H4>\n                            </Piece>\n                        </Li>\n                    </Ul>\n                </Section>\n                <Section>\n                    <H3>해리포터 덕후들 모여라!</H3>\n                    <Ul>\n                        <Li onClick={hasRoom}>\n                            <Piece>\n                                <Img id='img4'/>\n                                <H4 name='title2'></H4>\n                            </Piece>\n                        </Li>\n                        <Li onClick={hasRoom}>\n                            <Piece>\n                                <Img id='img5'/>\n                                <H4 name='title2'></H4>\n                            </Piece>\n                        </Li>\n                        <Li onClick={hasRoom}>\n                            <Piece>\n                                <Img id='img6'/>\n                                <H4 name='title2'></H4>\n                            </Piece>\n                        </Li>\n                    </Ul>\n                </Section>\n                <Section>\n                    <H3>헝거게임 몰아보기</H3>\n                    <Ul>\n                        <Li onClick={hasRoom}>\n                            <Piece>\n                                <Img id='img7'/>\n                                <H4 name='title3'></H4>\n                            </Piece>\n                        </Li>\n                        <Li onClick={hasRoom}>\n                            <Piece>\n                                <Img id='img8'/>\n                                <H4 name='title3'></H4>\n                            </Piece>\n                        </Li>\n                        <Li onClick={hasRoom}>\n                            <Piece>\n                                <Img id='img9'/>\n                                <H4 name='title3'></H4>\n                            </Piece>\n                        </Li>\n                    </Ul>\n                </Section>\n            </Top>\n            <BtmNav>\n                <Div1 onClick={refreshPage}>\n                        <ImHome size=\"24\" color=\"#D9D9D9\"/>\n                        <P>HOME</P>\n                </Div1>\n                <Div2 onClick={modalClose}>\n                    <GiTheater size=\"24\" color=\"#D9D9D9\"/><P>ROOM</P></Div2>\n                <Div3>\n                    <Link to=\"/Search\" style={{ textDecoration: \"none\"}}>\n                        <ImSearch size=\"24\" color=\"#D9D9D9\"/>\n                        <P>SEARCH</P>\n                    </Link>\n                </Div3>\n            </BtmNav>\n        </div>\n    );\n};\n\nexport default List;\n\nconst Top = styled.body`\n    padding-bottom: 90px;\n`\n\nconst MainText = styled.h1`\n    color: #A5C9CA;\n    font-family: \"KOTRA\";\n    font-size: 50px;\n    padding-top: 14%;\n    margin-bottom: 8%;\n`\n\nconst BtmNav = styled.nav`\n    width: 100vw;\n    height: 70px;\n    margin: 10px auto;\n    background-color: #2c3333;\n    position: fixed;\n    bottom: -10px;\n    left: 0;\n    right: 0;\n    opacity: 0.9;\n`\n\nconst Div1 = styled.div`\n    float: left;\n    width:30%;\n    height: 100%;\n    padding-top: 16px;\n    padding-left: 6%;\n`\n\nconst Div2 = styled(Div1)`\n    float: center;\n    padding-left: 0%;\n    width: 28%;\n`\n\nconst Div3 = styled(Div1)`\n    float: right;\n    padding-left: 0%;\n    padding-right: 6%;\n`\n\nconst P = styled.p`\n    line-height: 30px;\n    color: #D9D9D9;\n    font-family: \"SansMedium\";\n    font-size: 12px;\n`\n\nconst Section = styled.div`\n    overflow: hidden;\n    height: auto;\n    padding: 0 22px;\n    margin-top: 6px;\n`\n\nconst H3 = styled.h3`\n    font-family: 'SansBold';\n    font-size: 18px;\n    color: #d9d9d9;\n    text-align: left;\n    padding: 30px 0px;\n    margin-left: 10px;\n`\n\nconst Img = styled.img`\n    width: 108px;\n    height: 146px;\n    border-radius: 6px;\n`\n\nconst Piece = styled.div`\n    display: block;\n    overflow: hidden;\n    width: 108px;\n`\n\nconst H4 = styled.h4`\n    font-family: 'SansMedium';\n    font-size: 14px;\n    margin-top: 8px;\n    color: #d9d9d9;\n    text-decoration: none;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n\n    \n`\n\nconst Ul = styled.ul`\n    // overflow:auto; \n    // white-space: nowrap;\n    // overflow-x:scroll;\n`\n\nconst Li = styled.li`\n    color: blue;\n    display: inline-block;\n    float: left;\n    margin: 12px 12px;\n`","C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\pages\\Main.jsx",["71"],"C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\pages\\Search.jsx",["72","73","74","75","76","77","78","79"],"import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { ImHome, ImSearch } from \"react-icons/im\";\nimport axios from 'axios';\nimport Modal from \"../components/Modal2\";\n\nconst Search = () => {\n    const [modalOpen, setModalOpen] = useState(false)\n    const modalClose = () => {\n        setModalOpen(!modalOpen)\n    }\n\n    const [keyword, setkeyword] = useState('');\n\n    const handleSearch = (e) => {\n        setkeyword(e.target.value);\n    }\n    \n    const onKeyPress = (e) => {\n        if (e.key=='Enter') {\n            search();\n        }\n    }\n\n\n    const search = (e) => {\n        fetch('http://127.0.0.1:8000/movie/')\n        .then(response => response.json())\n        .then(response => {\n            if (keyword=='') {\n                alert('검색어를 입력하세요.');\n            }\n\n            const titles = response.map((movie) => {\n                return movie.title;\n            })\n\n            const filterTitle = titles.filter((titles) => \n                 titles.toLowerCase().includes(keyword)\n            );\n\n            const setTitles = filterTitle.map((filterTitle) => {\n                if (keyword!='') {\n                const li = document.getElementById('li');\n                const ul = document.getElementById('ul');\n                const title = document.createElement('li');\n                const div = document.createElement('div');\n                const h1 = document.createElement('h1');\n                \n                title.id = 'box';\n                div.id = 'div';\n                h1.id = 'h1';\n\n                ul.appendChild(title);\n                title.appendChild(div);\n                title.appendChild(h1);\n\n                h1.append(filterTitle);\n\n                const style = document.createElement('style');\n                style.innerHTML = \"#box {padding-left: 30px;overflow: hidden; width: 90%; display: inline-block; float: left; margin-top: 62px;}\";\n                style.append(\"#div { width: 130px; height: 170px; border-radius: 6px; background-color: black; margin: 10px 10px; float: left; }\");\n                style.append(\"#h1 { color : #A5C9CA; font-size: 20px; margin: 26px; float: left;}\");\n                title.appendChild(style);\n\n\n                // TODO 검색해서 나온 관람방 클릭하면 해당 채팅방으로 이동\n\n                }\n            })\n\n            if (filterTitle=='') {\n                alert('아직 관람방이 없어요. 직접 만들어보세요!');\n                modalClose();\n            }\n        })\n    }\n\n    return (\n        <div>\n            { modalOpen && <Modal modalClose={modalClose} ></Modal>}\n            <MainText>HACKFLIX</MainText>\n            <Div>\n                <Div1>\n                <Div2>\n                    <button onClick={search} style={{backgroundColor:\"transparent\", borderStyle:\"none\"}}>\n                        <ImSearch size=\"26\" color=\"#D9D9D9\"/>\n                    </button>\n                </Div2>\n                    <Input onChange={handleSearch} onKeyPress={onKeyPress}></Input>\n                </Div1>\n                <Div3>\n                    <Link to=\"/List\" style={{ textDecoration: \"none\", color: \"#d9d9d9\" }}>\n                        <p style = {{fontSize:'12px'}}>취소</p>\n                    </Link>\n                </Div3>\n            </Div>\n            <div>\n                <ul id='ul'></ul>\n            </div>\n            <BtmNav>\n                <Divv1>\n                    <Link to=\"/List\" style={{ textDecoration: \"none\", color: \"#d9d9d9\" }}>\n                        <ImHome size=\"24\" color=\"#D9D9D9\"/>\n                        <P>HOME</P>\n                    </Link>\n                </Divv1>\n                <Divv3>\n                    <Link to=\"/Search\" style={{ textDecoration: \"none\"}}>\n                        <ImSearch size=\"24\" color=\"#D9D9D9\"/>\n                        <P>SEARCH</P>\n                    </Link>\n                </Divv3>\n            </BtmNav>\n        </div>\n    );\n};\n\nexport default Search;\n\nconst MainText = styled.h1`\n    color: #A5C9CA;\n    font-family: \"KOTRA\";\n    font-size: 50px;\n    padding-top: 14%;\n    margin-bottom: 8%;\n`\n\nconst Div = styled.div`\n    width: 90%;\n    height: 50px;\n    margin: auto;\n`\n\nconst Input = styled.input`\n    width: 76%;\n    height: 92%;\n    border: none;\n    border-radius: 8px;\n    background: transparent;\n    color: #d9d9d9;\n    font-family: \"SansMedium\";\n    padding-left: 12px;\n`\n\nconst Div1 = styled.div`\n    background-color: #395B64;\n    float: left;\n    width: 86%;\n    height: 100%;\n    border-radius: 6px;\n`\nconst Div2 = styled(Div1)`\n    width: 18%;\n    padding-top: 4%;\n    height: 76%;\n`\n\nconst Div3 = styled(Div1)`\n    background-color: #2c3333;\n    width: 10%;\n    float: right;\n    font-family: \"SansMedium\";\n    line-height: 50px;\n`\n\nconst BtmNav = styled.nav`\n    width: 100%;\n    height: 70px;\n    margin: 10px auto;\n    background-color: #2c3333;\n    position: fixed;\n    bottom: -10px;\n    left: 0;\n    right: 0;\n    opacity: 0.9;\n`\n\nconst Divv1 = styled.div`\n    float: left;\n    width:30%;\n    height: 100%;\n    padding-top: 16px;\n    padding-left: 6%;\n`\n\nconst Divv3 = styled(Divv1)`\n    float: right;\n    padding-left: 0%;\n    padding-right: 6%;\n`\n\nconst P = styled.p`\n    line-height: 30px;\n    color: #D9D9D9;\n    font-family: \"SansMedium\";\n    font-size: 12px;\n\n`","C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\pages\\Chat\\Chat.jsx",[],"C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\pages\\Home\\Home.jsx",[],"C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\components\\Modal2.js",["80","81","82","83","84","85"],"C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\components\\Modal.js",["86","87","88","89","90","91"],"import React, { useEffect, useState } from 'react';\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Modal = ({openModal}) => {\n\n  const [nickname, setNickname] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleIdInput = (e) => {\n    setNickname(e.target.value);\n  }\n  const handlePwInput = (e) => {\n    setPassword(e.target.value);\n  }\n\n  const loginfetch = (e) => {\n    fetch('http://127.0.0.1:8000/user/signup/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        nickname: nickname, \n        password: password, \n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.nickname[0] === 'user의 nickname은/는 이미 존재합니다.') {\n          alert('이미 존재하는 아이디입니다.');\n        } else {\n          alert('회원가입 성공!');\n          openModal();\n      }\n      setNickname('');\n      setPassword('');\n    });\n  }\n\n  const loginfetchOnKeyPress = (e) => {\n    if (e.key=='Enter') {\n        loginfetch();\n    }\n  }\n\n  useEffect(() => { // 모달 뒷배경 스크롤 방지\n    document.body.style.cssText = `\n      position: fixed; \n      top: -${window.scrollY}px;\n      overflow-y: scroll;\n      width: 100%;`;\n    return () => {\n      const scrollY = document.body.style.top;\n      document.body.style.cssText = '';\n      window.scrollTo(0, parseInt(scrollY || '0', 10) * -1);\n    };\n  }, []);\n\n  return (\n    <Modal__container>\n      <MModal>\n        <Modal__button onClick={openModal}>X</Modal__button>\n        <br /><br /><br />\n        <P1>ID</P1><br />\n        <Div1>\n          <Input1\n            type=\"text\"\n            name=\"id\"\n            value={nickname}\n            onChange={handleIdInput} \n          />\n        </Div1>\n        <P2>PASSWORD</P2><br />\n        <Div2>\n          <Input2 \n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handlePwInput} \n            onKeyPress={loginfetchOnKeyPress}\n          />\n        </Div2>\n        <Button onClick={loginfetch}>Join Now!</Button>\n      </MModal>\n    </Modal__container>\n  )\n}\n\nexport default Modal;\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 100%;\n  height: 100%;\n  background-color: red;\n  \n`\nconst MemoList = styled.p`\n  padding-top: 10px;\n  color: black;\n  font-size: 14px;\n  font-family: \"SCDream\";\n  margin-bottom: 10px;\n`\n\nconst Modal__container = styled.div`\n    width: 100%;\n    height: 100vh;\n    background-color: rgba(0,0,0,0.6);\n    z-index: 10;\n    position: fixed;\n    top: 0;\n    left: 0;\n`\n\nconst MModal = styled.div`\n    width: 300px;\n    height: 66%;\n    background-color: #2c3333;\n    // Modal 창 브라우저 가운데로 조정\n    position: absolute;\n    left: 50%;\n    top:50%;\n    transform: translate(-50%, -50%);\n    z-index:100;\n    border-radius: 2px;\n`\n\nconst Modal__button = styled.button`\n    position: relative;\n    width: 24px;\n    height: 24px;\n    text-align: center;\n    left:-40.6%;\n    top: 4%;\n    border-style: none;\n    border-radius: 30px;\n    background-color: #e7f6f2;\n    line-height: 24px;\n    color: #2c3333;\n    font-size: 16px;\n    font-family: \"KOTRA\";\n`\n\nconst Div1 = styled.div`\n    background-color: #e7f6f2;\n    opacity: 0.8;\n    border-radius: 8px;\n    height: 46px;\n    width: 220px;\n    display: inline-block;\n    margin-top: -10px;\n`\n\nconst Input1 = styled.input`\n    height: 96%;\n    width: 92%;\n    border: none;\n    border-radius: 8px;\n    background: transparent;\n    color: #2c3333;\n    font-family: \"SansMedium\";\n    padding-left: 12px;\n`\n\nconst P1 = styled.p`\n    margin-top: 46px;\n    color: #e7f6f2;\n    text-align: left;\n    padding-left: 14%;\n    font-family: \"SansMedium\";\n    font-size: 12px;\n`\n\nconst Div2 = styled(Div1)`\n`\n\nconst P2 = styled(P1)`\n    margin-top: 18%;\n`\n\nconst Input2 = styled(Input1)`\n`\nconst Button = styled.button`\n    width: 140px;\n    height: 46px;\n    border-radius: 12px;\n    border-style: none;\n    background-color: #A5C9CA;\n    font-size: 18px;\n    color: #395B64;\n    font-family: \"SansBold\";\n    margin-top: 26%;\n`","C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\pages\\Chat\\Loading.jsx",[],"C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\components\\ChatInput\\ChatInput.jsx",["92","93"],"C:\\Users\\user\\Desktop\\Hackathon-4team\\react-chat-client\\src\\components\\ChatLog\\ChatLog.jsx",["94","95"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useLocation } from 'react-router-dom';\n\nconst ChatLog = ({ socket }) => {\n  const [msgList, setMsgList] = useState([]);\n\n  const nickname = sessionStorage.getItem('nickname');\n  const roomName = sessionStorage.getItem('roomName');\n\n  // console.log(params());\n\n  useEffect(() => {\n    // messsgeItem : {msg: String, name: String, timeStamp: String}\n    socket.on(\"onReceive\", (messageItem) => {\n      setMsgList((msgList) => [...msgList, messageItem]);\n      console.log(messageItem);\n    });\n    socket.on(\"onConnect\", (systemMessage) => {\n      setMsgList((msgList) => [...msgList, { msg: systemMessage }]);\n    });\n    socket.on(\"onDisconnect\", (systemMessage) => {\n      setMsgList((msgList) => [...msgList, { msg: systemMessage }]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n\n  var location = useLocation().pathname;\n  var title = location.split('/');\n  title = title[2];\n  console.log(title);\n\n  return (\n    <div>\n      <Ul>\n      <Title>{title}</Title>\n      {msgList.map((msg, idx) => (\n        <Box key={idx}>\n          <br /><br />\n          <Div>        \n            <Div1>{msg.nickname}</Div1>\n            <DDiv>\n            <Div2>{msg.msg}</Div2>\n            <Div3>{msg.timeStamp}</Div3>\n            </DDiv>\n          </Div>\n        </Box>\n      ))}\n      </Ul>\n    </div>\n  );\n};\n\nexport default ChatLog;\n\nconst Title = styled.div`  \n  font-family: \"SansLight\";\n  font-size: 30px;\n  color: #d9d9d9;\n  margin-top: 10%;\n\n`\n\nconst Box = styled.div`  \n  font-family: \"SansLight\";\n  font-size: 14px;\n`\n\nconst Div1 = styled.div`  \nmargin-top: 6%;\nmargin-left: 4%;\nwidth:100%;\ntext-align: left;\nfont-size: 14px;\nmargin-bottom: 2%;\n// background-color: pink;\nwidth: auto;\npadding: 6px 14px;\nborder-radius: 18px;\ncolor: #d9d9d9;\n`\n\nconst Div2 = styled.p`\nmargin-left: 9%;\nmargin-right: 6%;\nwidth: 90%;\nfloat: left;\nfont-size: 22px;\nfont-family: \"SansMedium\";\npositiom: absolute;\nbottom: 0;\n\nbackground-color: #d9d9d9;\nwidth: auto;\npadding: 6px 14px;\nborder-radius: 10px;\n\n`\n\nconst Div3 = styled.p`\ncolor: #d9d9d9;\nbottom: -20px;\nposition: relative;\n// float: right;\nfont-size: 12px;\n`\n\nconst Div = styled.div`\n// background-color: red;\ndisplay: flex;\nheight: 100%;\nmargin: 10px;\nposition: relative;\n`\n\nconst DDiv = styled.div`\n  // background-color: pink;\n  position: absolute;\n  top: 100%;\n  width: 90%;\n  text-align: left;\n  // bottom: 0;\n`\n\nconst Ul = styled.ul`\n`",{"ruleId":"96","severity":1,"message":"97","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":23},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"96","severity":1,"message":"104","line":1,"column":10,"nodeType":"98","messageId":"99","endLine":1,"endColumn":18},{"ruleId":"96","severity":1,"message":"105","line":9,"column":8,"nodeType":"98","messageId":"99","endLine":9,"endColumn":12},{"ruleId":"96","severity":1,"message":"106","line":10,"column":8,"nodeType":"98","messageId":"99","endLine":10,"endColumn":14},{"ruleId":"96","severity":1,"message":"107","line":1,"column":16,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"108","line":78,"column":22,"nodeType":"98","messageId":"99","endLine":78,"endColumn":33},{"ruleId":"109","severity":1,"message":"110","line":90,"column":39,"nodeType":"111","messageId":"112","endLine":90,"endColumn":41},{"ruleId":"109","severity":1,"message":"110","line":90,"column":68,"nodeType":"111","messageId":"112","endLine":90,"endColumn":70},{"ruleId":"109","severity":1,"message":"110","line":54,"column":18,"nodeType":"111","messageId":"112","endLine":54,"endColumn":20},{"ruleId":"96","severity":1,"message":"113","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":21,"column":18,"nodeType":"111","messageId":"112","endLine":21,"endColumn":20},{"ruleId":"109","severity":1,"message":"110","line":31,"column":24,"nodeType":"111","messageId":"112","endLine":31,"endColumn":26},{"ruleId":"96","severity":1,"message":"114","line":43,"column":19,"nodeType":"98","messageId":"99","endLine":43,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":43,"column":61,"nodeType":"117","messageId":"118","endLine":43,"endColumn":63},{"ruleId":"109","severity":1,"message":"119","line":44,"column":28,"nodeType":"111","messageId":"112","endLine":44,"endColumn":30},{"ruleId":"96","severity":1,"message":"120","line":45,"column":23,"nodeType":"98","messageId":"99","endLine":45,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":73,"column":28,"nodeType":"111","messageId":"112","endLine":73,"endColumn":30},{"ruleId":"96","severity":1,"message":"121","line":3,"column":16,"nodeType":"98","messageId":"99","endLine":3,"endColumn":25},{"ruleId":"96","severity":1,"message":"113","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":13},{"ruleId":"122","severity":1,"message":"123","line":56,"column":5,"nodeType":"124","messageId":"125","endLine":56,"endColumn":23},{"ruleId":"122","severity":1,"message":"126","line":58,"column":9,"nodeType":"124","messageId":"125","endLine":58,"endColumn":45},{"ruleId":"96","severity":1,"message":"127","line":98,"column":7,"nodeType":"98","messageId":"99","endLine":98,"endColumn":10},{"ruleId":"96","severity":1,"message":"128","line":107,"column":7,"nodeType":"98","messageId":"99","endLine":107,"endColumn":15},{"ruleId":"96","severity":1,"message":"129","line":3,"column":10,"nodeType":"98","messageId":"99","endLine":3,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":42,"column":14,"nodeType":"111","messageId":"112","endLine":42,"endColumn":16},{"ruleId":"122","severity":1,"message":"123","line":61,"column":5,"nodeType":"124","messageId":"125","endLine":61,"endColumn":23},{"ruleId":"122","severity":1,"message":"126","line":63,"column":9,"nodeType":"124","messageId":"125","endLine":63,"endColumn":44},{"ruleId":"96","severity":1,"message":"127","line":92,"column":7,"nodeType":"98","messageId":"99","endLine":92,"endColumn":10},{"ruleId":"96","severity":1,"message":"128","line":101,"column":7,"nodeType":"98","messageId":"99","endLine":101,"endColumn":15},{"ruleId":"96","severity":1,"message":"130","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":23},{"ruleId":"96","severity":1,"message":"131","line":2,"column":8,"nodeType":"98","messageId":"99","endLine":2,"endColumn":22},{"ruleId":"96","severity":1,"message":"132","line":8,"column":9,"nodeType":"98","messageId":"99","endLine":8,"endColumn":17},{"ruleId":"96","severity":1,"message":"133","line":9,"column":9,"nodeType":"98","messageId":"99","endLine":9,"endColumn":17},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["134"],"no-negated-in-lhs",["135"],"'useState' is defined but never used.","'Home' is defined but never used.","'styled' is defined but never used.","'useEffect' is defined but never used.","'setRoomData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'setTitles' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '!==' and instead saw '!='.","'li' is assigned a value but never used.","'useParams' is defined but never used.","react/jsx-pascal-case","Imported JSX component Modal__container must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Modal__button must be in PascalCase or SCREAMING_SNAKE_CASE","'Div' is assigned a value but never used.","'MemoList' is assigned a value but never used.","'Link' is defined but never used.","'useRef' is defined but never used.","'socketIOClient' is defined but never used.","'nickname' is assigned a value but never used.","'roomName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]